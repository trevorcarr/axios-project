{"ast":null,"code":"var _jsxFileName = \"/Users/trev/dev/Axios/src/containers/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Post from '../../components/Post/Post';\nimport FullPost from '../../components/FullPost/FullPost';\nimport NewPost from '../../components/NewPost/NewPost';\nimport './Blog.css';\n\nclass Blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      selectedPostId: null,\n      error: null\n    };\n\n    this.postSelectedHandler = id => {\n      this.setState({\n        selectedPostId: id\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n      const posts = response.data.slice(0, 4);\n      const updatedPosts = posts.map(post => {\n        return { ...post,\n          author: 'Trev'\n        };\n      });\n      this.setState({\n        posts: updatedPosts\n      }); // console.log(response);\n    }).catch(error => {\n      // console.log(error);\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    let posts = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \" Something when wrong\");\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post.id,\n          title: post.title,\n          author: post.author,\n          clicked: () => this.postSelectedHandler(post.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 24\n          }\n        });\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"Posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, posts), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FullPost, {\n      id: this.state.selectedPostId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NewPost, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Blog;","map":{"version":3,"sources":["/Users/trev/dev/Axios/src/containers/Blog/Blog.js"],"names":["React","Component","axios","Post","FullPost","NewPost","Blog","state","posts","selectedPostId","error","postSelectedHandler","id","setState","componentDidMount","get","then","response","data","slice","updatedPosts","map","post","author","catch","render","textAlign","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBM,KADyB,GACjB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,cAAc,EAAE,IAFZ;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADiB;;AAAA,SA0BzBC,mBA1ByB,GA0BFC,EAAD,IAAQ;AAC1B,WAAKC,QAAL,CAAe;AAACJ,QAAAA,cAAc,EAAEG;AAAjB,OAAf;AACH,KA5BwB;AAAA;;AAOzBE,EAAAA,iBAAiB,GAAI;AACjBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,4CAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,YAAMT,KAAK,GAAGS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAd;AACA,YAAMC,YAAY,GAAGZ,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAI;AACnC,eAAO,EACH,GAAGA,IADA;AAEHC,UAAAA,MAAM,EAAE;AAFL,SAAP;AAIH,OALoB,CAArB;AAMA,WAAKV,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEY;AAAR,OAAd,EARc,CASd;AACH,KAXL,EAYKI,KAZL,CAYWd,KAAK,IAAG;AACX;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KAfL;AAgBH;;AAMDe,EAAAA,MAAM,GAAI;AACN,QAAIjB,KAAK,gBAAG;AAAG,MAAA,KAAK,EAAE;AAACkB,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;;AACA,QAAG,CAAC,KAAKnB,KAAL,CAAWG,KAAf,EAAsB;AAClBF,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqBC,IAAI,IAAI;AACjC,4BAAO,oBAAC,IAAD;AACH,UAAA,GAAG,EAAEA,IAAI,CAACV,EADP;AAEH,UAAA,KAAK,EAAEU,IAAI,CAACK,KAFT;AAGH,UAAA,MAAM,EAAEL,IAAI,CAACC,MAHV;AAIH,UAAA,OAAO,EAAE,MAAM,KAAKZ,mBAAL,CAAyBW,IAAI,CAACV,EAA9B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,OANO,CAAR;AAOH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,KADL,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKD,KAAL,CAAWE,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ;AAaH;;AAvDwB;;AA0D7B,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Post from '../../components/Post/Post';\nimport FullPost from '../../components/FullPost/FullPost';\nimport NewPost from '../../components/NewPost/NewPost';\nimport './Blog.css';\n\nclass Blog extends Component {\n    state = {\n        posts: [],\n        selectedPostId: null,\n        error: null\n    }\n\n    componentDidMount () {\n        axios.get('https://jsonplaceholder.typicode.com/posts')\n            .then(response => {\n                const posts = response.data.slice(0, 4);\n                const updatedPosts = posts.map(post => {\n                    return {\n                        ...post,\n                        author: 'Trev'\n                    }\n                });\n                this.setState({posts: updatedPosts});\n                // console.log(response);\n            })\n            .catch(error=> {\n                // console.log(error);\n                this.setState({error: true});\n            });\n    }\n\n    postSelectedHandler = (id) => {\n        this.setState ({selectedPostId: id})\n    }\n\n    render () {\n        let posts = <p style={{textAlign: 'center'}}> Something when wrong</p>; \n        if(!this.state.error) {\n            posts = this.state.posts.map(post => {\n                return <Post \n                    key={post.id} \n                    title={post.title} \n                    author={post.author}\n                    clicked={() => this.postSelectedHandler(post.id)} />;\n            });\n        }\n\n        return (\n            <div>\n                <section className=\"Posts\">\n                    {posts}\n                </section>\n                <section>\n                    <FullPost id={this.state.selectedPostId} />\n                </section>\n                <section>\n                    <NewPost />\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Blog;"]},"metadata":{},"sourceType":"module"}